version: 2.1

orbs:
 android: circleci/android@0.2.0
 slack: circleci/slack@3.4.2
 
jobs:
  debug-build-test:
    executor: android/android
    environment:
        JAVA_OPTS: -Xmx1536m
        GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx1536m -XX:+HeapDumpOnOutOfMemoryError"'

    steps:
      - checkout
      - run: 
          command: | 
            echo $GOOGLE_SERVICES_JSON
            echo $GOOGLE_SERVICES_JSON | base64 -di > ./app/google-services.json
      - run:
          command: ./gradlew assembleDebug
      - run:
          command: ./gradlew testDebugUnitTest
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
      - store_artifacts:
          path: app/build/outputs/apk/debug/app-debug.apk
          destination: app-debug.apk
          
  release-build:
    executor: android/android
    environment:
        JAVA_OPTS: -Xmx1536m
        GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx1536m -XX:+HeapDumpOnOutOfMemoryError"'

    steps:
      - checkout
      - run: 
          command: | 
            echo $GOOGLE_SERVICES_JSON
            echo $GOOGLE_SERVICES_JSON | base64 -di > ./app/google-services.json
      - run:
          name: Release build
          command: ./gradlew assembleRelease
      - store_artifacts:
          path: app/build/outputs/apk/release/app-release-unsigned.apk
          destination: app-release-unsigned.apk

  notify-slack:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - slack/status:
          success_message: ':circleci-pass: $CIRCLE_BRANCH のビルドが完了しました\n:github_octocat: User：$CIRCLE_USERNAME'
          failure_message: ':circleci-fail: $CIRCLE_BRANCH のビルドが失敗しました\n:github_octocat: User：$CIRCLE_USERNAME'
          webhook: '${SLACK_WEBHOOK}'

workflows:
  version: 2
  build-and-test:
    jobs:
      - debug-build-test:
          filters:
            branches:
              only: 
                - feature/qiita_10_sub/circleci
                - feature/lib_for_test
                - /^feature/qiita_1[1-9]/
                - feature/circleci
      - release-build:
          filters:
            branches:
              only: 
                - feature/circleci
      - notify-slack:
          requires:
            - debug-build-test
            - release-build
      